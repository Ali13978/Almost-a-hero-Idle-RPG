using System;

namespace Simulation
{
	public class WiseSnakeInvulnerabilityVisualEffect
	{
		public WiseSnakeInvulnerabilityVisualEffect(int minionsCount, World world, float soundEventDelay, string id)
		{
			this.world = world;
			this.id = id;
			this.minionsDeathTime = new float[minionsCount];
			for (int i = 0; i < this.minionsDeathTime.Length; i++)
			{
				this.minionsDeathTime[i] = -1f;
			}
			this.pieceBrokenSound = new SoundDelayed(soundEventDelay, SoundArchieve.inst.wiseSnakeCirclePieceBroken, 1f);
			this.circleBrokenSound = new SoundDelayed(soundEventDelay, SoundArchieve.inst.wiseSnakeLastCirclePieceBroken, 1f);
		}

		public void Update(float dt, int numAliveMinions)
		{
			this.rotationTime = dt;
			for (int i = 0; i < this.minionsDeathTime.Length; i++)
			{
				if (i < numAliveMinions)
				{
					this.minionsDeathTime[i] = 0f;
				}
				else if (this.minionsDeathTime[i] >= 0f)
				{
					if (this.minionsDeathTime[i] == 0f)
					{
						this.world.AddSoundEvent(new SoundEventSound(SoundType.GAMEPLAY, this.id, false, 0f, (numAliveMinions != 0) ? this.pieceBrokenSound : this.circleBrokenSound));
					}
					this.minionsDeathTime[i] += dt;
				}
			}
		}

		public void OnDead()
		{
			this.world.AddSoundEvent(new SoundEventSound(SoundType.GAMEPLAY, this.id, false, 0f, new SoundDelayed(1f, SoundArchieve.inst.wiseSnakeCircleDestroyed, 1f)));
		}

		public float[] minionsDeathTime;

		public float rotationTime;

		private World world;

		private Sound pieceBrokenSound;

		private Sound circleBrokenSound;

		private string id;
	}
}
